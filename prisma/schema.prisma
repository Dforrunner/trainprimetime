// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
//
//Push changed with: npx prisma db push
//
//MIGRATIONS: https://www.prisma.io/docs/concepts/components/prisma-migrate/get-started
//
//First migration: $ prisma migrate dev --name init
//Second migration: $ prisma migrate dev --name added_job_title

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model Home {
    id                  String      @id @default(auto()) @map("_id") @db.ObjectId
    headerText          String?
    headerButtonText    String?
    headerImg           String?
}

model Testimonials {
    id                  String      @id @default(auto()) @map("_id") @db.ObjectId
    text                String
    writter             String
}

model Services {
    id                  String      @id @default(auto()) @map("_id") @db.ObjectId
    name                String
    summery             String
}

model Tag {
    id                  String      @id @default(auto()) @map("_id") @db.ObjectId
    name                String      @unique
    postIDs             String[]    @db.ObjectId
    posts               Post[]      @relation(fields: [postIDs], references: [id])
}

model Category {
    id                  String      @id @default(auto()) @map("_id") @db.ObjectId
    name                String      @unique
    postIDs             String[]    @db.ObjectId
    posts               Post[]      @relation(fields: [postIDs], references: [id])
}


model Post {
    id                  String      @id @default(auto()) @map("_id") @db.ObjectId
    title               String
    slug                String      @unique
    date                DateTime    @default(now()) @db.Date
    excerpt             String?
    author              String?
    userId              Int?
    publish             Boolean?    @default(false)
    isScheduled         Boolean?    @default(false)
    publishDate         DateTime?   @default(now())
    img                 Bytes?
    createdOn           DateTime    @default(now())
    categoryIDs         String[]    @db.ObjectId
    categories          Category[]  @relation(fields: [categoryIDs], references: [id])
    tagIDs              String[]    @db.ObjectId
    tags                Tag[]       @relation(fields: [tagIDs], references: [id])
    content             String?
}


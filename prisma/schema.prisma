// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
//
//Push changed with: npx prisma db push
//
//MIGRATIONS: https://www.prisma.io/docs/concepts/components/prisma-migrate/get-started
//
//First migration: $ prisma migrate dev --name init
//Second migration: $ prisma migrate dev --name added_job_title

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Home {
    id                  Int         @id @default(autoincrement())
    headerText          String?
    headerButtonText    String?
    headerImg           String?
}

model Testimonials {
    id                  Int         @id @default(autoincrement())
    text                String      @db.Text
    writter             String
}

model Services {
    id                  Int         @id @default(autoincrement())
    name                String
    summery             String      @db.Text
}

model Tag {
     id                    Int                 @id @default(autoincrement())
     name                  String
     blog                  TagsOnBlogs[]
}

model TagsOnBlogs {
    blog                  Blogs     @relation(fields: [blogId], references: [id])
    blogId                Int // relation scalar field (used in the `@relation` attribute above)
    tag                   Tag @relation(fields: [tagId], references: [id])
    tagId                 Int // relation scalar field (used in the `@relation` attribute above)

    @@id([blogId, tagId])
}

model Category {
  id                    Int                 @id @default(autoincrement())
  name                  String
  blogs                 CategoriesOnBlogs[]
}

model CategoriesOnBlogs {
  blog                  Blogs     @relation(fields: [blogId], references: [id])
  blogId                Int // relation scalar field (used in the `@relation` attribute above)
  category              Category @relation(fields: [categoryId], references: [id])
  categoryId            Int // relation scalar field (used in the `@relation` attribute above)

  @@id([blogId, categoryId])
}

model Blogs {
    id                  Int         @id @default(autoincrement())
    title               String
    slug                String      @unique
    date                DateTime    @default(now())  @db.Date
    excerpt             String?     @db.Text
    author              String?
    content             String?     @db.Text
    userId              Int?
    publish             Boolean?    @default(false)
    isScheduled         Boolean?    @default(false)
    publishDate         DateTime?   @default(now())
    imgSrc              String?
    createdOn           DateTime    @default(now())
    categories          CategoriesOnBlogs[]
    tags                TagsOnBlogs[]
}

